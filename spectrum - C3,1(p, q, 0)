#include <stdio.h>
#include <gsl/gsl_poly.h>

int
main (void)
{
  int i, n =5;
  int p, q, r, t;
  double z[10];

  for (p = 1; p < 50001; p++)
  {
    //printf (" p = %d \n",p);
    for (q = 1; q < p; q++)
    {
      //λ^4 - 3 λ^2 - 2 λ - λ^2 p + p q + p - λ^2 q + q = 0
      double a[5] = { p*q+p+q, -2, -3-p-q, 0, 1};

      gsl_poly_complex_workspace * w = gsl_poly_complex_workspace_alloc (n);

      gsl_poly_complex_solve (a, n, w, z);

      gsl_poly_complex_workspace_free (w);

      double sum =0;
      //printf (" p = %d, q = %d \n", p, q);
      for (i = 0; i < n-1; i++) 
      {
        sum  = fabs(z[2*i]-roundf(z[2*i]))+sum;
        //printf ("z%d = %+.18f \n",i, z[2*i]-round(z[2*i]));
        //printf ("z%d = %+.18f \n",i, z[2*i]);
      }
      //printf ("sum = %+.18f \n",sum);
      if (sum<0.0001)
      {
         printf (" p = %d, q = %d \n", p, q);
         printf ("sum = %+.18f \n",sum);
         for (i = 0; i < n-1; i++) 
         {
           printf ("z%d = %+.18f \n",i, z[2*i]);
         }

      }
    }
  }

  return 0;
